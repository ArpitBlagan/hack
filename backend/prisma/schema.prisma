// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id           String @id @default(uuid())
  name         String
  email        String
  password     String
  image        String?
  applications Application[]
  github       String
  projects     String[]
  jobs         Job[]
  user1Chats   Chat[] @relation("User1Chats")
  user2Chats   Chat[] @relation("User2Chats")
  messages     Message[]
}

model Chat{
  id        String @id @default(uuid())
  user1Id   String
  user2Id   String
  user1     User  @relation("User1Chats",references: [id],fields: [user1Id])
  user2     User  @relation("User2Chats",references: [id],fields: [user2Id])
  messages  Message[]
  @@unique([user1Id, user2Id])
}

model Message{
  id           String @id @default(uuid())
  text         String
  chatId       String
  chat         Chat @relation(references: [id],fields: [chatId])
  sendAt       DateTime
  by           String
  user         User  @relation(references: [id],fields: [by])
}

model Job{
  id           String @id @default(uuid())
  title        String
  description  String
  tags         Tags[]
  applications Application[]
  image        String?
  userId       String
  user         User @relation(references: [id],fields: [userId])
}

model Application{
  id     String @id @default(uuid())
  userId String
  user   User @relation(references: [id],fields: [userId])
  jobId  String
  job    Job @relation(references: [id],fields: [jobId])
  pitch  String
}

enum Tags{
  Frontend
  Backend
  Fullstack
  Design
  Writing
}